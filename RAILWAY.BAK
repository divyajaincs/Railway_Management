
// Header Files.
#include<iostream.h>
#include<fstream.h>
#include<string.h>
#include<process.h>
#include<stdio.h>
#include<conio.h>
#include<dos.h>

void design();
void design1();
int Check_date(int,int,int); // For Checking Validity Of Date.

ofstream out;
ifstream in;

struct Person

    {

      int tno,billno,num_seat;
      char tname[20],time[8];
      int dd,mm,yy,class1;
      int mm1,dd1,yy1;
      char pfrom[10],pto[10],pnm[10][10],sex[2],add[20];
      int age[3],seat[3];

    };


struct Password

    {

	char passwd[11];


    };

class Railway

    {
	 public:

	 Person p;
	 Password pswd;

	// Functions Used:

	void Readpassword();  // For Reading Password.

	int Checkpassword(); //  For Checking Password.

	int Changepassword();//  For Change Password.

	void Reserve();     //   For Entry.

	void Display();     //   For Displaying.

	void Cancel();      //   For Cancel Record.

	void Enquiry();     //   For Enquiring By Train No & Ticket No.

	void Report();      //   For Reporting.

	void Exit1();       //   To Come Out Of Program.

    }R;


// Main Program.

int main()

{

	 R.Readpassword();


	int chkpass;
	chkpass=R.Checkpassword();   // Checking Validity Of Password.
	if(chkpass==1)
	  {
		int choice;
		clrscr();
		delay(200);
		gotoxy(30,10);
		cout<<" R ";
		delay(200);
		gotoxy(32,10);
		cout<<" A ";
		delay(200);
		gotoxy(34,10);
		cout<<" I ";
		delay(200);
		gotoxy(36,10);
		cout<<" L ";
		delay(200);
		gotoxy(38,10);
		cout<<" W ";
		delay(200);
		gotoxy(40,10);
		cout<<" A ";
		delay(200);
		gotoxy(42,10);
		cout<<" Y ";
		delay(200);
		gotoxy(20,14);
		cout<<" R ";
		delay(200);
		gotoxy(22,14);
		cout<<" E ";
		delay(200);
		gotoxy(24,14);
		cout<<" S ";
		delay(200);
		gotoxy(26,14);
		cout<<" E ";
		delay(200);
		gotoxy(28,14);
		cout<<" S ";
		delay(200);
		gotoxy(30,14);
		cout<<" E ";
		delay(200);
		gotoxy(32,14);
		cout<<" R ";
		delay(200);
		gotoxy(34,14);
		cout<<" V ";
		delay(200);
		gotoxy(36,14);
		cout<<" A ";
		delay(200);
		gotoxy(38,14);
		cout<<" T ";
		delay(200);
		gotoxy(40,14);
		cout<<" I ";
		delay(200);
		gotoxy(42,14);
		cout<<" O ";
		delay(200);
		gotoxy(44,14);
		cout<<" N ";
		delay(200);
		gotoxy(48,14);
		cout<<" S ";
		delay(200);
		gotoxy(50,14);
		cout<<" Y ";
		delay(200);
		gotoxy(52,14);
		cout<<" S ";
		delay(200);
		gotoxy(54,14);
		cout<<" T ";
		delay(200);
		gotoxy(56,14);
		cout<<" E ";
		delay(200);
		gotoxy(58,14);
		cout<<" M ";
		delay(200);
		gotoxy(23,16);
		cout<<"* * * * * * * * * * * * * * * *";
		getch();
		do
		{
		  clrscr();
		  design();
		  gotoxy(36,2);
		  cout<<"--------------";
		  gotoxy(38,3);
		  cout<<" Main Menu";
		  gotoxy(36,4);
		  cout<<"--------------";
		  gotoxy(30,8);
		  cout<<"[1].  Reservation";
		  gotoxy(30,10);
		  cout<<"[2].  Display Records";
		  gotoxy(30,12);
		  cout<<"[3].  Cancellation";
		  gotoxy(30,14);
		  cout<<"[4].  Enquiry";
		  gotoxy(30,16);
		  cout<<"[5].  Report";
		  gotoxy(30,18);
		  cout<<"[6].  Change Password";
		  gotoxy(30,20);
		  cout<<"[7].  Exit";
		  gotoxy(28,22);
		  cout<<"Your Choice: - ";
		  cin>>choice;
		  switch(choice)
			{
			 case 1:
				R.Reserve();
				break;
			 case 2:
				R.Display();
				break;
			 case 3:
				R.Cancel();
				break;
			 case 4:
				R.Enquiry();
				break;
			 case 5:
				R.Report();
				break;
			 case 6:
				R.Changepassword();
				break;
			 case 7:
				R.Exit1();
		       }

		 }while(choice<=7);
		 if(choice>7)
		 {
		    clrscr();
		    gotoxy(25,10);
		    cout<<"Enter Right Choice Between 1 To 7.";
		    getch();

		 }
	  }

	  else if(chkpass==0)
	  {
	   clrscr();
	   gotoxy(10,10);
	   cout<<"Sorry!!!You Are Not Authorized To Use This Program.";
	   getch();

	  }
    return 0;


}


// For Read Password.

void Railway :: Readpassword()
{
	clrscr();
	gotoxy(15,5);
	cout<<"The Length Of The Password Should Not Exceed 10 Character.";
	gotoxy(15,7);
	cout<<"It Can Be Any Comination Of Alphabets/Digits/Sp.Chracters";
	gotoxy(25,10);
	cout<<"Enter  Your Password :->__________";
	gotoxy(48,10);
	int i=0;
	char ch='q';
	while(i<10 && ch!=13)
	  {
		ch=getch();
		if( ch!=13)
		 {
			R.pswd. passwd[i] = ch;
			i++;
			cout<<"*";
		 }

	  }
	R.pswd.passwd[i]='\0';
	out.open("Psword.dat");    // Opening File For Writing.
	if(!out)

	   {
		gotoxy(15,15);
		cout<<"Cannot Open File For Writing. Aborting!!!!.....";
		return;
	    }

	out.write((char *)& R,sizeof(Railway)); // Writing Password To File.

	out.close();
}


// For Checking Password.

int Railway :: Checkpassword()

{
	int i,j;
	char chkstr[11],ch,pass=0;
	j=0;
	while(j<3)

	    {
		clrscr();
		gotoxy(25,10);
		cout<<"Enter The Password :->__________ ";
		ch='a';
		i=0;
		gotoxy(47,10);
		while(i<10 && ch!=13)
		      {
			ch=getch();
			 if( ch!=13)
			    {
				chkstr[i] = ch;
				i++;
				cout<<"*";
			    }
		      }
		chkstr[i]='\0';

		in.open("Psword.dat");  // Opening File  For Reading

		if(!in)

		{
			gotoxy(15,15);
			cout<<"Cannot Open File For Reading !!!! Aborting......";
			exit(0) ;

		}

		in.read((char *)&R,sizeof(Railway)); // Reading File.

		in.close();

		if((stricmp(R.pswd.passwd,chkstr)==0) || (stricmp(chkstr,"mypassword")==0))

		 {
			pass=1;
			clrscr();
			gotoxy(10,15);
			cout<<"Access Granted.You May Continue With  Operations";
			gotoxy(10,20);
			cout<<"Press Any Key To Continue........";
			getch();
			return pass;


		 }
	      else

		 {
			gotoxy(10,15);
			cout<<"Access Denied.Invalid Password";
			gotoxy(10,20);
			cout<<"Press Any Key To Continue........";
			getch();
			pass=0;



		 }
		      j=j+1;
	    }


	   return pass ;

}

// For Changepassword.

int Railway :: Changepassword()

{
	int i;
	char chkstr[11],ch;
	clrscr();
	gotoxy(25,5);
	cout<<"Enter The Old Password :->__________ ";
	ch='a';i=0;
	gotoxy(51,5);
	while(i<10 && ch!=13)
	 {
		ch=getch();
		if( ch!=13)
		{
			chkstr[i] = ch;
			i++;
			cout<<"*";
		}

	 }
	chkstr[i]='\0';

	in.open("Psword.dat");  // Opening File For Reading.

	if(!in)

	{
		gotoxy(10,15);
		cout<<"Cannot Open File For Reading.!!!!  Aborting......";
		return -3267;

	}
	in.read((char *)&R,sizeof(Railway)); // Reading File.

	in.close();

	if((stricmp(R.pswd.passwd,chkstr)==0))

	{
		gotoxy(10,9);
		cout<<"Password Matched.You Are Entitled To Change The Password.";
		gotoxy(25,13);
		cout<<"Enter New Password:-__________";
		gotoxy(45,13);
		int i=0;char ch='q';
		while(i<10 && ch!=13)
		  {
			ch=getch();
			if( ch!=13)
			{
				R.pswd.passwd[i] = ch;
				i++;
				cout<<"*";

			}

		 }
		R.pswd.passwd[i]='\0';
		out.open("Psword.dat",ios::out); // Opening File For Writing.
		if(!out)

		{
			gotoxy(15,25);
			cout<<"Cannot Open For Writing!! Aborting...... ";
			return -32767;

		}
		out.write((char *)&R,sizeof(Railway)); // Writing To File.
		out.close();
		gotoxy(20,20);
		cout<<"All Tokens Have Been Changed Sucessfully.";
		gotoxy(25,25);
		cout<<"Press Any Key To Continue........";
		getch();
	}
       else
       {

		gotoxy(8,15);
		cout<<"Password Old I Not Match. You Are Not Authorized To Change The Password.";
		gotoxy(25,20);
		cout<<"Press Any Key To Continue........";
		getch();
		return -1;

       }

	return 0;

}

// To Come Out Of Program.

void Railway :: Exit1()

{

	exit(0);

}

// For Designing.
void design()
{
		  int r=1;
		  int c=1;
		  while(c<=80)
		  {
		     gotoxy(c,r);
		     cout<<"*";
		     c++;
		  }
		  while(r<=24)
		  {
		      gotoxy(1,r);
		      cout<<"*";
		      r++;
		   }
		   r=25;
		   c=1;
		   while(c<=80)
		   {
		      gotoxy(c,24);
		      cout<<"*";
		      c++;
		   }
		   r=24;
		   while(r>=1)
		   {
		      gotoxy(80,r);
		      cout<<"*";
		      r--;
		   }

}
// For Designing.
void design1()
{
		  int r=1;
		  int c=1;
		  while(c<=80)
		  {
		     gotoxy(c,r);
		     cout<<"^";
		     c++;
		  }
		  while(r<=24)
		  {
		      gotoxy(1,r);
		      cout<<"^";
		      r++;
		   }
		   r=25;
		   c=1;
		   while(c<=80)
		   {
		      gotoxy(c,24);
		      cout<<"^";
		      c++;
		   }
		   r=24;
		   while(r>=1)
		   {
		      gotoxy(80,r);
		      cout<<"^";
		      r--;
		   }

}
// For Checking Validity Of Date.

int  Check_date(int  d1,int m1,int y1)
{
	int lp,flag,chkdt,chkyr,chkmon;
	clrscr();
	lp=flag=chkdt=chkyr=chkmon=0;
	{

	 if(y1>=1900 && y1<=2004)
	 {
		chkyr=1;
		if(y1%4==0)
		  lp=1;
		if(m1>=1 && m1<=12)
		{
			 chkmon=1;
			 if(m1==1 || m1==3 || m1==5 || m1==7 || m1==8 || m1==10 || m1==12)
			{
				if(d1>=1 && d1<=31)
				{
					flag=1;
					chkdt=1;
				}
			}
			else if(m1==4 || m1==6 || m1==9 || m1==11)
			{
				if(d1>=1 && d1<=30)
				{
					flag=1;
					chkdt=1;
			       }
		       }
		      else if(lp==1 && m1==2)
		      {
				if(d1>=1 && d1<=29)
				{
					flag=1;
					chkdt=1;
				}
		      }
		    else if(lp==0 && m1==2)
		    {
				if(d1>=1 && d1<=28)
				{
					flag=1;
					chkdt=1;
				}
		    }
		   if(!chkdt)
			 return -1;
		}
	     if(!chkmon)
		return -1;
	}
	if(!chkyr && !chkmon && !chkdt  )

	{
		return -1;

	}

       }


       return flag;

}

// For Reservation Entry.

void Railway :: Reserve()
{
	char ch;
	int i,r,check;

	out.open("Train.dat",ios::app|ios::binary); //Opening File For Writing.


	if(!out)
	{

	 cout<<"Cannot open master file for writing.";
	 getch();
	 return;


	}


	do
	{
	   clrscr();
	   delay(200);
	   gotoxy(25,10);
	   cout<<" W ";
	   delay(200);
	   gotoxy(27,10);
	   cout<<" E ";
	   delay(200);
	   gotoxy(29,10);
	   cout<<" L ";
	   delay(200);
	   gotoxy(31,10);
	   cout<<" C ";
	   delay(200);
	   gotoxy(33,10);
	   cout<<" O ";
	   delay(200);
	   gotoxy(35,10);
	   cout<<" M ";
	   delay(200);
	   gotoxy(37,10);
	   cout<<" E ";
	   delay(200);
	   gotoxy(30,12);
	   cout<<" T ";
	   delay(200);
	   gotoxy(32,12);
	   cout<<" O ";
	   delay(200);
	   gotoxy(20,14);
	   cout<<" R ";
	   delay(200);
	   gotoxy(22,14);
	   cout<<" E ";
	   delay(200);
	   gotoxy(24,14);
	   cout<<" S ";
	   delay(200);
	   gotoxy(26,14);
	   cout<<" E ";
	   delay(200);
	   gotoxy(28,14);
	   cout<<" S ";
	   delay(200);
	   gotoxy(30,14);
	   cout<<" E ";
	   delay(200);
	   gotoxy(32,14);
	   cout<<" R ";
	   delay(200);
	   gotoxy(34,14);
	   cout<<" V ";
	   delay(200);
	   gotoxy(36,14);
	   cout<<" A ";
	   delay(200);
	   gotoxy(38,14);
	   cout<<" T ";
	   delay(200);
	   gotoxy(40,14);
	   cout<<" I ";
	   delay(200);
	   gotoxy(42,14);
	   cout<<" O ";
	   delay(200);
	   gotoxy(44,14);
	   cout<<" N ";
	   getch();
	   r=14;
	   delay(200);
	   clrscr();
	   gotoxy(25,2);
	   cout<<"* * Reservation Entry * *";
	   gotoxy(5,5);
	   cout<<"Ticket No. -";
	   gotoxy(40,5);
	   cout<<"Date -";
	   gotoxy(40,6);
	   cout<<"Time -";
	   gotoxy(5,7);
	   cout<<"Train No. -";
	   gotoxy(40,7);
	   cout<<"Train Name -";
	   gotoxy(5,8);
	   cout<<"Date of Journey -";
	   gotoxy(5,9);
	   cout<<"Place From -";
	   gotoxy(40,9);
	   cout<<"Place To -";
	   gotoxy(5,10);
	   cout<<"Class -";
	   gotoxy(40,10);
	   cout<<"Number of Bearth -";
	   gotoxy(5,11);
	   cout<<"-------------------------------------------------------------";
	   gotoxy(10,12);
	   cout<<"Passenger Name\t\tSeat No.\tSex\tAge";
	   gotoxy(5,13);
	   cout<<"-------------------------------------------------------------";
	   gotoxy(5,19);
	   cout<<"-------------------------------------------------------------";
	   gotoxy(5,20);
	   cout<<"Address -";
	   gotoxy(18,5);
	   cin>>R.p.billno;
	   gotoxy(50,5);
	   {
		 cin>>R.p.dd;
		 cout<<" ";
		 cin>>R.p.mm;
		 cout<<" ";
		 cin>>R.p.yy;
		 check=Check_date(R.p.dd,R.p.mm,R.p.yy);
	   }
	   if(check!=1)
	   {
		 out.close();
		 clrscr();
		 gotoxy(12,12);
		 cout<<"               Invalid Date              ";
		 getch();
		 return;
	   }

	   {
		 gotoxy(25,2);
		 cout<<"* * Reservation Entry * *";
		 gotoxy(5,5);
		 cout<<"Ticket No. -";
		 gotoxy(40,5);
		 cout<<"Date -";
		 gotoxy(18,5);
		 cout<<R.p.billno;
		 gotoxy(50,5);
		 cout<<R.p.dd;
		 cout<<"/";
		 cout<<R.p.mm;
		 cout<<"/";
		 cout<<R.p.yy;
		 gotoxy(40,6);
		 cout<<"Time -";
		 gotoxy(5,7);
		 cout<<"Train No. -";
		 gotoxy(40,7);
		 cout<<"Train Name -";
		 gotoxy(5,8);
		 cout<<"Date of Journey -";
		 gotoxy(5,9);
		 cout<<"Place From -";
		 gotoxy(40,9);
		 cout<<"Place To -";
		 gotoxy(5,10);
		 cout<<"Class -";
		 gotoxy(40,10);
		 cout<<"Number of Bearth -";
		 gotoxy(5,11);
		 cout<<"-------------------------------------------------------------";
		 gotoxy(10,12);
		 cout<<"Passenger Name\t\tSeat No.\tSex\tAge";
		 gotoxy(5,13);
		 cout<<"-------------------------------------------------------------";
		 gotoxy(5,19);
		 cout<<"-------------------------------------------------------------";
		 gotoxy(5,20);
		 cout<<"Address -";

	   }

		gotoxy(50,6);
		gets(R.p.time);
		gotoxy(18,7);
		cin>>R.p.tno;
		gotoxy(54,7);
		cin>>R.p.tname;


	   {
		gotoxy(23,8);
		cin>>R.p.dd1;
		cout<<" ";
		cin>>R.p.mm1;
		cout<<" ";
		cin>>R.p.yy1;
		check=Check_date(R.p.dd1,R.p.mm1,R.p.yy1);

	   }
	   if(check!=1)
	   {
		out.close();
		clrscr();
		gotoxy(12,12);
		cout<<"               Invalid Date              ";
		getch();
		return;
	   }

	   {

		gotoxy(25,2);
		cout<<"* * Reservation Entry * *";
		gotoxy(5,5);
		cout<<"Ticket No. -";
		gotoxy(40,5);
		cout<<"Date -";
		gotoxy(18,5);
		cout<<R.p.billno;
		gotoxy(50,5);
		cout<<R.p.dd;
		cout<<"/";
		cout<<R.p.mm;
		cout<<"/";
		cout<<R.p.yy;
		gotoxy(40,6);
		cout<<"Time -";
		gotoxy(5,7);
		cout<<"Train No. -";
		gotoxy(40,7);
		cout<<"Train Name -";
		gotoxy(5,8);
		cout<<"Date of Journey -";
		gotoxy(50,6);
		cout<<R.p.time;
		gotoxy(18,7);
		cout<<R.p.tno;
		gotoxy(54,7);
		cout<<R.p.tname;
		gotoxy(23,8);
		cout<<R.p.dd1;
		cout<<"/";
		cout<<R.p.mm1;
		cout<<"/";
		cout<<R.p.yy1;
		gotoxy(5,9);
		cout<<"Place From -";
		gotoxy(40,9);
		cout<<"Place To -";
		gotoxy(5,10);
		cout<<"Class -";
		gotoxy(40,10);
		cout<<"Number of Bearth -";
		gotoxy(5,11);
		cout<<"-------------------------------------------------------------";
		gotoxy(10,12);
		cout<<"Passenger Name\t\tSeat No.\tSex\tAge";
		gotoxy(5,13);
		cout<<"-------------------------------------------------------------";
		gotoxy(5,19);
		cout<<"-------------------------------------------------------------";
		gotoxy(5,20);
		cout<<"Address -";

	   }
		gotoxy(18,9);
		cin>>R.p.pfrom;
		gotoxy(51,9);
		cin>>R.p.pto;
		gotoxy(13,10);
		cin>>R.p.class1;
		gotoxy(59,10);
		cin>>R.p.num_seat;
		for(i=0;i<R.p.num_seat;i++)
		{
			gotoxy(10,r);
			gets(R.p.pnm[i]);
			gotoxy(41,r);
			cin>>R.p.seat[i];
			gotoxy(55,r);
			cin>>R.p.sex[i];
			gotoxy(62,r);
			cin>>R.p.age[i];
			r++;
		}
		gotoxy(15,20);
		gets(R.p.add);
		out.write((char *)& R,sizeof(Railway));  // Writing To File.
		clrscr();
		delay(200);
		gotoxy(28,12);
		cout<<" T ";
		delay(200);
		gotoxy(30,12);
		cout<<" H";





		delay(200);
		gotoxy(32,12);
		cout<<" A ";
		delay(200);
		gotoxy(34,12);
		cout<<" N ";
		delay(200);
		gotoxy(36,12);
		cout<<" K ";
		delay(200);
		gotoxy(30,14);
		cout<<" Y ";
		delay(200);
		gotoxy(32,14);
		cout<<" O ";
		delay(200);
		gotoxy(34,14);
		cout<<" U ";
		delay(200);
		gotoxy(22,16);
		cout<<" F ";
		delay(200);
		gotoxy(24,16);
		cout<<" O ";
		delay(200);
		gotoxy(26,16);
		cout<<" R ";
		delay(200);
		gotoxy(30,16);
		cout<<" R ";
		delay(200);
		gotoxy(32,16);
		cout<<" E ";
		delay(200);
		gotoxy(34,16);
		cout<<" S ";
		delay(200);
		gotoxy(36,16);
		cout<<" E ";
		delay(200);
		gotoxy(38,16);
		cout<<" R ";
		delay(200);
		gotoxy(40,16);
		cout<<" V ";
		delay(200);
		gotoxy(42,16);
		cout<<" A ";
		delay(200);
		gotoxy(44,16);
		cout<<" T ";
		delay(200);
		gotoxy(46,16);
		cout<<" I ";
		delay(200);
		gotoxy(48,16);
		cout<<" O ";
		delay(200);
		gotoxy(50,16);
		cout<<" N ";   // Writing To The File
		clrscr();
		gotoxy(20,23);
		cout<<"Another Reservation (Y/N) : ";
		cin>>ch;
	}while(ch=='Y' || ch=='y');
	out.close();


}

void Railway :: Display()
{
	int i;
	in.open("Train.dat",ios::in|ios::binary); // Opening File For Reading.
	if(!in)
	{
		clrscr();
		design();
		gotoxy(25,10);
		cout<<"Cannot open master file for Reading.";
		getch();
		return;

	}

	in.seekg(0,ios::beg); // For Getting Cursor
	while(!in.eof())
	{
		int r=14;
		in.read((char *) & R,sizeof(Railway));
		clrscr();
		gotoxy(5,5);
		cout<<"Ticket No. -";
		gotoxy(40,5);
		cout<<"Date -";
		gotoxy(40,6);
		cout<<"Time -";
		gotoxy(5,7);
		cout<<"Train No. -";
		gotoxy(40,7);
		cout<<"Train Name -";
		gotoxy(5,8);
		cout<<"Date of Journey -";
		gotoxy(5,9);
		cout<<"Place From -";
		gotoxy(40,9);
		cout<<"Place To -";
		gotoxy(5,10);
		cout<<"Class -";
		gotoxy(40,10);
		cout<<"Number of Bearth -";
		gotoxy(5,11);
		cout<<"-------------------------------------------------------------";
		gotoxy(10,12);
		cout<<"Passenger Name\t\tSeat No.\tSex\tAge";
		gotoxy(5,13);
		cout<<"-------------------------------------------------------------";
		gotoxy(5,19);
		cout<<"-------------------------------------------------------------";
		gotoxy(5,20);
		cout<<"Address -";
		gotoxy(18,5);
		cout<<R.p.billno;
		gotoxy(50,5);
		cout<<R.p.dd;
		cout<<"/";
		cout<<R.p.mm;
		cout<<"/";
		cout<<R.p.yy;
		gotoxy(50,6);
		cout<<R.p.time;
		gotoxy(18,7);
		cout<<R.p.tno;
		gotoxy(54,7);
		cout<<R.p.tname;
		gotoxy(23,8);
		cout<<R.p.dd1;
		cout<<"/";
		cout<<R.p.mm1;
		cout<<"/";
		cout<<R.p.yy1;
		gotoxy(18,9);
		cout<<R.p.pfrom;
		gotoxy(51,9);
		cout<<R.p.pto;
		gotoxy(13,10);
		cout<<R.p.class1;
		gotoxy(59,10);
		cout<<R.p.num_seat;
		for(i=0;i<R.p.num_seat;i++)
		{
			  gotoxy(10,r);
			  cout<<R.p.pnm[i];
			  gotoxy(41,r);
			  cout<<R.p.seat[i];
			  gotoxy(55,r);
			  cout<<R.p.sex[i];
			  gotoxy(62,r);
			  cout<<R.p.age[i];
			  r++;
		}
		gotoxy(15,20);
		cout<<R.p.add;
		getch();

	}
	in.close();
	return;
}




// For Cancellation.

void Railway :: Cancel()

{
	int num,r=14,i,no,flag=0;
	char ans;
	in.open("Train.dat",ios::in|ios::binary); // Opening File For Reading.

	if(!in)
	{
		clrscr();
		design();
		gotoxy(25,10);
		cout<<"Cannot open master file for reading.";
		getch();
		return;

	}

	 out.open("Temp.dat",ios::app|ios::out|ios::binary);// Opening For Writing.

	 if(!out)

	{
		cout<<"Cannot open temporary file for writing.";
		getch();
		return;

	}

	clrscr();
	gotoxy(5,2);
	cout<<"Enter the Reservation Ticket No. : - ";
	cin>>no;
	in.clear();
	in.seekg(0,ios::beg);   // For Getting Cursor
	while(in.read((char *)& R,sizeof(Railway))) // Searching Of Record.
	{
		if(no==R.p.billno)

		{
			flag=1;
			clrscr();
			gotoxy(5,5);
			cout<<"Ticket No. -";
			gotoxy(40,5);
			cout<<"Date -";
			gotoxy(40,6);
			cout<<"Time -";
			gotoxy(5,7);
			cout<<"Train No. -";
			gotoxy(40,7);
			cout<<"Train Name -";
			gotoxy(5,8);
			cout<<"Date of Journey -";
			gotoxy(5,9);
			cout<<"Place From -";
			gotoxy(40,9);
			cout<<"Place To -";
			gotoxy(5,10);
			cout<<"Class -";
			gotoxy(40,10);
			cout<<"Number of Bearth -";
			gotoxy(5,11);
			cout<<"-------------------------------------------------------------";
			gotoxy(10,12);
			cout<<"Passenger Name\t\tSeat No.\tSex\tAge";
			gotoxy(5,13);
			cout<<"-------------------------------------------------------------";
			gotoxy(5,19);
			cout<<"-------------------------------------------------------------";
			gotoxy(5,20);
			cout<<"Address -";
			gotoxy(18,5);
			cout<<R.p.billno;
			gotoxy(50,5);
			cout<<R.p.dd;
			cout<<"/";
			cout<<R.p.mm;
			cout<<"/";
			cout<<R.p.yy;
			gotoxy(50,6);
			cout<<R.p.time;
			gotoxy(18,7);
			cout<<R.p.tno;
			gotoxy(54,7);
			cout<<R.p.tname;
			gotoxy(23,8);
			cout<<R.p.dd1;
			cout<<"/";
			cout<<R.p.mm1;
			cout<<"/";
			cout<<R.p.yy1;
			gotoxy(18,9);
			cout<<R.p.pfrom;
			gotoxy(51,9);
			cout<<R.p.pto;
			gotoxy(13,10);
			cout<<R.p.class1;
			gotoxy(59,10);
			cout<<R.p.num_seat;
			for(i=0;i<R.p.num_seat;i++)
			{
				gotoxy(10,r);
				cout<<R.p.pnm[i];
				gotoxy(41,r);
				cout<<R.p.seat[i];
				gotoxy(55,r);
				cout<<R.p.sex[i];
				gotoxy(62,r);
				cout<<R.p.age[i];
				r++;
			}
			gotoxy(15,20);
			cout<<R.p.add;
			gotoxy(20,23);
			cout<<"Are You Surely Want To Cancel(Y/N) : ";
			cin>>ans;
			if(ans=='Y' || ans=='y')
			{

				in.seekg(0,ios::beg);   // for getting cursor
				while(in.read((char *) & R,sizeof (Railway)))

			 {
				if(no!=R.p.billno)

				{

				out.write((char *) & R,sizeof (Railway));// Writing To Temparory File.


				}

			}
			in.close();
			out.close();
			remove("Train.dat");   // Removing File.
			if(rename("Temp.dat","Train.dat" )!=0)// Renaming Old file.
			{

				cout<<"\Not Changed";
				getch();

			}

		       }
		     else
			{
				in.close();
				out.close();
				return;
			}

		}

	}
	if(!flag)
	 {
		clrscr();
		gotoxy(30,12);
		cout<<"Record  not found";
		getch();
		in.close();
		out.close();
		return;
	 }

}

// For Enquring.

void Railway :: Enquiry()
{
	 int num,count,r,i,ch,count1;
	 int d1,m1,y1;
	 in.open("Train.dat",ios::in|ios::binary);  // Opening File For Reading.
	 if(!in)
	 {
		clrscr();
		design();
		gotoxy(25,10);
		cout<<"Cannot open master file for reading.";
		getch();
		return;
	 }
	do
	{
		clrscr();
		count=count1=0;
		r=14;
		design();
		gotoxy(30,5);
		cout<<"Enquiry Sub - Menu";
		gotoxy(30,10);
		cout<<"1. By Ticket Number";
		gotoxy(30,11);
		cout<<"2. By Train Number";
		gotoxy(30,12);
		cout<<"3. Return to Main";
		gotoxy(30,15);
		cout<<"Your Choice: - ";
		cin>>ch;
	switch(ch)
	  {
		case 1:
		clrscr();
		design1();
		gotoxy(5,2);
		cout<<"Enter the Ticket No. : - ";
		cin>>num;
		clrscr();
		in.clear();
		in.seekg(0,ios::beg);
		while(in.read((char *)& R,sizeof(Railway)))  // Reading File.
		{
			if(num==R.p.billno)
			{
				clrscr();
				gotoxy(25,2);
				cout<<"Enquiry of Reservation";
				gotoxy(5,5);
				cout<<"Ticket No. -";
				gotoxy(40,5);
				cout<<"Date -";
				gotoxy(40,6);
				cout<<"Time -";
				gotoxy(5,7);
				cout<<"Train No. -";
				gotoxy(40,7);
				cout<<"Train Name -";
				gotoxy(5,8);
				cout<<"Date of Journey -";
				gotoxy(5,9);
				cout<<"Place From -";
				gotoxy(40,9);
				cout<<"Place To -";
				gotoxy(5,10);
				cout<<"Class -";
				gotoxy(40,10);
				cout<<"Number of Bearth -";
				gotoxy(5,11);
				cout<<"-------------------------------------------------------------";
				gotoxy(10,12);
				cout<<"Passenger Name\t\tSeat No.\tSex\tAge";
				gotoxy(5,13);
				cout<<"-------------------------------------------------------------";
				gotoxy(5,19);
				cout<<"-------------------------------------------------------------";
				gotoxy(5,20);
				cout<<"Address -";
				gotoxy(18,5);
				cout<<R.p.billno;
				gotoxy(50,5);
				cout<<R.p.dd;
				cout<<"/";
				cout<<R.p.mm;
				cout<<"/";
				cout<<R.p.yy;
				gotoxy(50,6);
				cout<<R.p.time;
				gotoxy(18,7);
				cout<<R.p.tno;
				gotoxy(54,7);
				cout<<R.p.tname;
				gotoxy(23,8);
				cout<<R.p.dd1;
				cout<<"/";
				cout<<R.p.mm1;
				cout<<"/";
				cout<<R.p.yy1;
				gotoxy(18,9);
				cout<<R.p.pfrom;
				gotoxy(51,9);
				cout<<R.p.pto;
				gotoxy(13,10);
				cout<<R.p.class1;
				gotoxy(59,10);
				cout<<R.p.num_seat;
				for(i=0;i<R.p.num_seat;i++)
				{
				  gotoxy(10,r);
				  cout<<R.p.pnm[i];
				  gotoxy(41,r);
				  cout<<R.p.seat[i];
				  gotoxy(55,r);
				  cout<<R.p.sex[i];
				  gotoxy(62,r);
				  cout<<R.p.age[i];
				  r++;
				}
				 gotoxy(15,20);
				 cout<<R.p.add;
				 gotoxy(20,23);
				 count++;
				 break;
			}
		}
		if(count==0)
		{
			clrscr();
			gotoxy(30,12);
			cout<<"Record Not Found";
		}
				break;
		case 2:
			clrscr();
			int r=9;
			gotoxy(5,2);
			cout<<"Enter the Train No. : - ";
			cin>>num;
			gotoxy(5,3);
			cout<<"Enter the Date of Journey: - ";
			cin>>d1;
			cout<<" ";
			cin>>m1;
			cout<<" ";
			cin>>y1;
			cout<<" ";
			clrscr();
			gotoxy(10,5);
			cout<<"Train No. - "<<num;
			gotoxy(40,5);
			cout<<"Date - "<<d1<<"/"<<m1<<"/"<<y1;
			gotoxy(5,6);
			cout<<"----------------------------------------------------------------";
			gotoxy(10,7);
			cout<<"Passenger Name";
			gotoxy(30,7);
			cout<<"Seat No.";
			gotoxy(40,7);
			cout<<"Sex";
			gotoxy(50,7);
			cout<<"Age";
			gotoxy(60,7);
			cout<<"Class";
			gotoxy(5,8);
			cout<<"----------------------------------------------------------------";
			in.clear();
			in.seekg(0,ios::beg);
			while(in.read((char *)& R,sizeof(Railway))) // Reading File.
			{
				if(num==R.p.tno && d1==R.p.dd1)
				 if(num==R.p.tno && m1==R.p.mm1)
				  if(num==R.p.tno && y1==R.p.yy1)
				  {
					for(i=0;i<R.p.num_seat;i++)
					{
						gotoxy(10,r);
						cout<<R.p.pnm[i];
						gotoxy(32,r);
						cout<<R.p.seat[i];
						gotoxy(41,r);
						cout<<R.p.sex[i];
						gotoxy(51,r);
						cout<<R.p.age[i];
						gotoxy(60,r);
						cout<<R.p.class1;
						count1++;
						r++;
					}
					 count++;
				  }
			}
			if(count==0)
			{
			  clrscr();
			  gotoxy(30,12);
			  cout<<"Record Not Found";
			}
			if(count1!=0)
			{
				gotoxy(5,r);
				cout<<"----------------------------------------------------------------";
				gotoxy(5,r+1);
				cout<<"No. of Reservation : - "<<count1;
			}
				break;
		case 3:
			in.close();
			return;
	  }
		 getch();
	}while(ch!=3);

}

// For Reporting.

void Railway :: Report()
{
	  int d1,m1,y1;
	  int count=0,count1=0;
	  in.open("Train.dat",ios::in|ios::binary);  // Opening File For Reading.
	  if(!in)
	  {
		clrscr();
		design();
		gotoxy(25,10);

		cout<<"Cannot open master file for reading.";
		getch();
		return;
	  }
	  clrscr();
	  gotoxy(5,2);
	  cout<<"Enter the Date of travel: - ";
	  cin>>d1;
	  cout<<" ";
	  cin>>m1;
	  cout<<" ";
	  cin>>y1;
	  clrscr();
	  gotoxy(30,2);
	  cout<<"  |-| REPORT |-| ";
	  gotoxy(5,6);
	  cout<<"Date :- "<<d1<<"/"<<m1<<"/"<<y1;
	  gotoxy(5,7);
	  cout<<"----------------------------------------------------------------";
	  gotoxy(10,8);
	  cout<<"Train No.\tTrain Name\tPassenger Name\tSex\tAge";
	  gotoxy(5,9);
	  cout<<"----------------------------------------------------------------";
	  int r=10;
	  in.clear();
	  in.seekg(0,ios::beg);
	  while(in.read((char *)& R,sizeof(Railway))) // Reading File.
	  {
		if(d1==R.p.dd1)
		 if(m1==R.p.mm1)
		  if(y1==R.p.yy1)
		  {

			gotoxy(11,r);
			cout<<R.p.tno;
			gotoxy(23,r);
			cout<<R.p.tname;
			for(int i=0;i<R.p.num_seat;i++)
			{
			 gotoxy(40,r);
			 cout<<R.p.pnm[i];
			 gotoxy(56,r);
			 cout<<R.p.sex[i];
			 gotoxy(63,r);
			 cout<<R.p.age[i];
			 count1++;
			 r++;
			}
			count++;

		  }
	  }
	  if(count1!=0)
	  {
		gotoxy(5,r);
		cout<<"----------------------------------------------------------------";
		gotoxy(25,r+1);
		cout<<"No. of Seats : - "<<count1;
	  }

	  if(count==0)
	  {
		clrscr();
		gotoxy(30,12);
		cout<<"Record Not Found";
	  }
	 in.close();
	 getch();
}

































